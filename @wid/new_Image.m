% BSD 3-Clause License (LICENSE.txt)
% Copyright (c) 2019, Joonas T. Holmi (jtholmi@gmail.com)
% All rights reserved.

function obj = new_Image(O_wit),
    if nargin == 0 || isempty(O_wit), O_wit = wid.new(); end % Create O_wit
    Version = wip.get_Root_Version(O_wit);
    
    Tag_DataClassName = wit.io.wit('DataClassName 0', 'TDImage');
    Tag_Data = wit.io.wit('Data 0');
    
    Tag_TData = wip.new_TData(Version, sprintf('New %s', Tag_DataClassName.Data));
    if nargin < 2 || isempty(Version) || Version == 7,
        Tag_TDImage = wit.io.wit('TDImage', [ ...
            wit.io.wit('Version', int32(1)) ...
            wit.io.wit('SizeX', int32(0)) wit.io.wit('SizeY', int32(0)) ...
            wit.io.wit('PositionTransformationID', int32(0)) ...
            wit.io.wit('SecondaryTransformationID', int32(0)) ...
            wit.io.wit('ZInterpretationID', int32(0)) ...
            wit.io.wit('ImageDataIsInverted', true) ...
            wit.io.wit('ImageData', [wit.io.wit('Dimension', int32(2)) wit.io.wit('DataType', int32(10)) wit.io.wit('Ranges', int32([0 0])) wit.io.wit('Data', uint8.empty)]) ... % Empty cannot be opened in WITec Project 2.10.3.3
            wit.io.wit('Average', []) wit.io.wit('Deviation', []) wit.io.wit('LineAverage', []) wit.io.wit('LineSumSqr', []) wit.io.wit('LineSum', []) wit.io.wit('LineA', []) wit.io.wit('LineB', []) wit.io.wit('LineChanged', logical.empty) wit.io.wit('LineValid', logical.empty) ...
            ]);
        Tag_Data.Data = [Tag_TData Tag_TDImage];
    elseif Version == 6,
        Tag_TDImage = wit.io.wit('TDImage', [ ...
            wit.io.wit('Version', int32(1)) ...
            wit.io.wit('SizeX', int32(0)) wit.io.wit('SizeY', int32(0)) ...
            wit.io.wit('PositionTransformationID', int32(0)) ...
            wit.io.wit('ZInterpretationID', int32(0)) ...
            wit.io.wit('ImageDataIsInverted', true) ...
            wit.io.wit('ImageData', [wit.io.wit('Dimension', int32(2)) wit.io.wit('DataType', int32(10)) wit.io.wit('Ranges', int32([0 0])) wit.io.wit('Data', uint8.empty)]) ... % Empty cannot be opened in WITec Project 2.10.3.3
            wit.io.wit('Average', []) wit.io.wit('Deviation', []) wit.io.wit('LineAverage', []) wit.io.wit('LineSumSqr', []) wit.io.wit('LineSum', []) wit.io.wit('LineA', []) wit.io.wit('LineB', []) wit.io.wit('LineChanged', logical.empty) wit.io.wit('LineValid', logical.empty) ...
            ]);
        Tag_Data.Data = [Tag_TData Tag_TDImage];
    elseif Version >= 0 && Version <= 5, % Legacy versions
        Tag_TDImage = wit.io.wit('TDImage', [ ...
            wit.io.wit('Version', int32(0)) ...
            wit.io.wit('SizeX', int32(0)) wit.io.wit('SizeY', int32(0)) ...
            wit.io.wit('PositionTransformationID', int32(0)) ...
            wit.io.wit('ZInterpretationID', int32(0)) ...
            wit.io.wit('ImageData', [wit.io.wit('Dimension', int32(2)) wit.io.wit('DataType', int32(10)) wit.io.wit('Ranges', int32([0 0])) wit.io.wit('Data', uint8.empty)]) ... % Empty cannot be opened in WITec Project 2.10.3.3
            wit.io.wit('Average', []) wit.io.wit('Deviation', []) wit.io.wit('LineAverage', []) wit.io.wit('LineSumSqr', []) wit.io.wit('LineSum', []) wit.io.wit('LineA', []) wit.io.wit('LineB', []) wit.io.wit('LineChanged', logical.empty) wit.io.wit('LineValid', logical.empty) ...
            ]);
        Tag_Data.Data = [Tag_TData Tag_TDImage];
    else, error('Unimplemented Version (%d)!', Version); end
    
    % Append these to the given (or created) O_wit
    [~, Pair] = wip.append(O_wit, [Tag_DataClassName Tag_Data]);
    
    % Create new wid
    obj = wid(Pair);
end
