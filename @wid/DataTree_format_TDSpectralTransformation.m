% BSD 3-Clause License (LICENSE.txt)
% Copyright (c) 2019, Joonas T. Holmi (jtholmi@gmail.com)
% All rights reserved.

function format = DataTree_format_TDSpectralTransformation(Version_or_obj),
    if nargin == 0, Version_or_obj = []; end
    
    if isempty(Version) || Version == 7 || Version == 6 || Version == 5,
        % Each row: wit-tag name, isVisible, {write-parser; read-parser}
        subformat_TDSpectralTransformation = ... % Excluding the Version-tag
            { ...
            'Version' false {@int32; @int32}; ...
            'SpectralTransformationType' true {@int32; @int32}; ...
            'Polynom' true {@double; @double}; ... % Quadratic polynomial with 3 coefficients.
            'nC' true {@double; @double}; ...
            'LambdaC' true {@double; @double}; ...
            'Gamma' true {@double; @double}; ...
            'Delta' true {@double; @double}; ...
            'm' true {@double; @double}; ...
            'd' true {@double; @double}; ...
            'x' true {@double; @double}; ...
            'f' true {@double; @double}; ...
            'FreePolynomOrder' true {@int32; @int32}; ...
            'FreePolynomStartBin' true {@double; @double}; ...
            'FreePolynomStopBin' true {@double; @double}; ...
            'FreePolynom' true {@double; @double} ... % Exists but not used by WITec Control software
            };
    elseif Version >= 0 && Version < 5,
        % Each row: wit-tag name, isVisible, {write-parser; read-parser}
        subformat_TDSpectralTransformation = ... % Excluding the Version-tag
            { ...
            'Version' false {@int32; @int32}; ...
            'SpectralTransformationType' true {@int32; @int32}; ...
            'Polynom' true {@double; @double}; ... % Quadratic polynomial with 3 coefficients.
            'nC' true {@double; @double}; ...
            'LambdaC' true {@double; @double}; ...
            'Gamma' true {@double; @double}; ...
            'Delta' true {@double; @double}; ...
            'm' true {@double; @double}; ...
            'd' true {@double; @double}; ...
            'x' true {@double; @double}; ...
            'f' true {@double; @double} ...
            };
    end
    
    % Each row: wit-tag name, isVisible, {subformat}
    format_TDSpectralTransformation = ...
        [wid.DataTree_format_TData(Version_or_obj); ...
        wid.DataTree_format_TDTransformation(Version_or_obj); ...
        {'TDSpectralTransformation' true subformat_TDSpectralTransformation}];
    
    format = format_TDSpectralTransformation;
end
